openapi: 3.0.3
info:
  title: Student API
  description: API for managing student records
  version: 1.0.0
  x-sendgrid:
    libraryPackage: student
servers:
  - url: https://api.sendgrid.com/

paths:
  /v3/students:
    get:
      operationId: ListStudent
      summary: Get all students
      responses:
        '200':
          description: A list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      operationId: CreateStudent
      summary: Create a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudent'
      responses:
        '201':
          description: The created student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

  /v3/students/{studentId}:
    get:
      operationId: GetStudent
      summary: Get a student by ID
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A student object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found

    put:
      operationId: UpdateStudent
      summary: Update a student by ID
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudent'
      responses:
        '200':
          description: The updated student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found

    delete:
      operationId: DeleteStudent
      summary: Delete a student by ID
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Student deleted successfully
        '404':
          description: Student not found

  /v3/students/{studentId}/courses:
    get:
      operationId: ListCourse
      summary: Get courses for a student
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of courses for the student
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '404':
          description: Student not found

  /v3/students/{studentId}/address:
    get:
      operationId: ListAddress
      summary: Get address for a student
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The address of the student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '404':
          description: Student not found

components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
        email:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
    
    NewStudent:
      type: object
      required:
        - firstName
        - lastName
        - age
        - email
      properties:
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
        email:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    
    UpdateStudent:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
        email:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    
    Course:
      type: object
      properties:
        courseId:
          type: string
        courseName:
          type: string
        credits:
          type: integer
    
    Address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
