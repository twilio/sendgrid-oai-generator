{{#resources}}
{{>licenseInfo}}
package {{package}};


{{#operations}}
{{#vendorExtensions.x-create-operation}}
@RequiredArgsConstructor
public class {{classname}}Creator {
{{#pathParams}}
    private final {{{dataType}}} {{paramName}};
{{/pathParams}}
{{#queryParams}}
    {{#required}}
    private final {{{dataType}}} {{paramName}};
    {{/required}}
    {{^required}}
    private {{{dataType}}} {{paramName}};
    {{/required}}
{{/queryParams}}
{{#headerParams}}
    {{#required}}
    private final {{{dataType}}} {{paramName}};
    {{/required}}
    {{^required}}
    private {{{dataType}}} {{paramName}};
    {{/required}}
{{/headerParams}}
{{#bodyParams}}
    private final {{{dataType}}} {{paramName}};
{{/bodyParams}}
    
    public {{{vendorExtensions.x-success-datatype}}} create(final SendgridRestClient client) {
        String path = "{{path}}";
        Request request = new Request.Builder(HttpMethod.{{httpMethod}}, path)
            {{#pathParams}}
                .addPathParam("{{baseName}}", {{paramName}}.toString())
            {{/pathParams}}
                .build();
    {{#vendorExtensions.has-queryParams}}
        addQueryParam(builder);
    {{/vendorExtensions.has-queryParams}}
    {{#vendorExtensions.has-headerParams}}
        addHeaderParam(builder);
    {{/vendorExtensions.has-headerParams}}
        Request request = builder.build();
        Response response = client.request(request);
        {{>helper/response_error_handling}}
        return JsonUtil.fromJson(response.getStream(), {{vendorExtensions.x-success-datatype}}.class);
    }
    {{>helper/header}}
    {{>helper/query}}
    {{>helper/body}}
    
}
{{/vendorExtensions.x-create-operation}}
{{/operations}}
{{/resources}}